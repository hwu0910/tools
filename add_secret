#!/usr/bin/env bash

# add secret to google secret & docker secret
# if exist, remove it and re-create it with current value

# Henry Wu 09/2021

for_real=false

function is_continue() 
{
    msg="$1"
    echo -n "$msg (Y/[n])?"
    read ans
    if [[ $ans == 'Y' ]]; then
        return 0
    else
        return 1
    fi
}

function run_cmd()
{
    cmd="$1"
    if $for_real; then
        res=$(eval $cmd 2>&1 >/dev/null)
        echo "$res"
    else
        echo "dry_run: $cmd"
    fi
}

prj="cnet"

if [[ $# < 2 ]]; then
    echo "$0 secret_name secret_value [cnet|cmb|b2b]"
    exit
elif [[ $# > 2 ]]; then
    prj=$3
fi

secret_name=$1
secret_value=$2
project="i-${prj}-dev"

if [[ $prj == "cnet" ]]; then
    swarm_manager="rv-dev-swarm-manager-a-1"
elif [[ $prj == "cmb" ]]; then
    swarm_manager="rv-cmb-dev-swarm-manager-a-1"
elif [[ $prj == "b2b" ]]; then
    swarm_manager="b2b-dev-swarm-manager-a-1"
fi

# Create Google Secret
if is_continue "Create Google Secret [$secret_name]"; then
    cmd="printf \"$secret_value\" | gcloud secrets create $secret_name --project=i-cnet-dev --data-file=-; gcloud secrets update $secret_name --update-labels=app=prism"
    run_cmd "$cmd"
fi

# Create Docker Secret
cmd_base="gcloud compute ssh $swarm_manager --project $project --tunnel-through-iap --command"

cmd="$cmd_base \"docker secret ls --format '{{.Name}}' | grep $secret_name\""
out_secret=`eval $cmd`

in_use_services=""

# if the secret exist
if [[ $out_secret != "" ]]; then 
    if is_continue "Found secret [$out_secret], remove it"; then
        cmd="$cmd_base \"docker secret rm $secret_name\""
        out_rm=$(run_cmd "$cmd")

        if [[ $out_rm == $secret_name ]]; then
            echo -e "\t$secret_name removed"

        elif [[ $out_rm =~ "secret '$secret_name' is in use" ]]; then
            in_use_services=$(echo $out_rm | cut -d: -f4 | sed -e "s/,//g")

            if is_continue "Remove secret [$secret_name] from services: [$in_use_services]"; then
                for svc in $in_use_services
                do
                    cmd="$cmd_base \"docker service update $svc --secret-rm $secret_name\""
                    run_cmd "$cmd"
                done
            fi
        fi
    fi
fi

# add secret with value
cmd="$cmd_base \"echo -en \"$secret_value\" | docker secret create $secret_name -\""
if is_continue "Create docker secret [$secret_name]"; then
    run_cmd "$cmd"
fi

# add secret to services
if [[ $in_use_services != "" ]] && is_continue "Add secret [$secret_name] to services: [$in_use_services]"; then
    for svc in $in_use_services
    do
        cmd="$cmd_base \"docker service update $svc --secret-add $secret_name\""
        run_cmd "$cmd"
    done
fi
